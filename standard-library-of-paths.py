import sys

import pygame

paths = {
    5: ((3, 1), (3, 5)),
    6: ((3, 1), (4, 1), (3, 2), (3, 5)),
    7: ((3, 1), (4, 1), (4, 2), (3, 2), (3, 5)),
    8: ((3, 1), (4, 1), (4, 2), (2, 2), (2, 4), (3, 5)),
    9: ((3, 1), (4, 1), (4, 2), (2, 2), (2, 5), (3, 5)),
    10: ((3, 1), (4, 1), (4, 2), (2, 2), (2, 4), (4, 4), (3, 5)),
    11: ((3, 1), (4, 1), (4, 2), (2, 2), (2, 4), (4, 4), (4, 5), (3, 5)),
    12: ((3, 1), (4, 1), (4, 2), (2, 2), (2, 4), (5, 4), (4, 5), (3, 5)),
    13: ((3, 1), (4, 1), (4, 2), (2, 2), (2, 3), (4, 3), (4, 4), (2, 4), (2, 5), (3, 5)),
    14: ((3, 1), (4, 1), (4, 2), (2, 2), (2, 3), (4, 3), (4, 4), (1, 4), (2, 5), (3, 5)),
    15: ((3, 1), (4, 1), (4, 2), (1, 2), (1, 3), (4, 3), (4, 4), (2, 4), (2, 5), (3, 5)),
    16: ((3, 1), (4, 1), (4, 2), (1, 2), (1, 3), (4, 3), (4, 4), (1, 4), (2, 5), (3, 5)),
    17: ((3, 1), (4, 1), (4, 2), (1, 2), (1, 3), (5, 3), (5, 4), (2, 4), (2, 5), (3, 5)),
    18: ((3, 1), (4, 1), (4, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (2, 5), (3, 5)),
    19: ((3, 1), (4, 1), (4, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (1, 5), (3, 5)),
    20: ((3, 1), (4, 1), (5, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (1, 5), (3, 5)),
    21: ((3, 1), (5, 1), (5, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (1, 5), (3, 5)),
    22: ((2, 1), (5, 1), (5, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (1, 5), (3, 5)),
    23: ((1, 1), (5, 1), (5, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (1, 5), (3, 5)),
    24: ((1, 1), (5, 1), (5, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (1, 5), (4, 5)),
    25: ((1, 1), (5, 1), (5, 2), (1, 2), (1, 3), (5, 3), (5, 4), (1, 4), (1, 5), (5, 5))
}


def tests():
    pygame.init()
    canvas = pygame.display.set_mode((100, 100))
    pygame.display.set_caption('Canvas. Tests')
    ctx = canvas
    ctx.set_alpha(None)
    ctx.set_colorkey(None)
    ctx.fill((255, 255, 255))

    cell_size = 20
    path = paths[16]

    for i in range(len(path) - 1):
        color = (0, 0, 0)
        from_ = path[i]
        to = path[i + 1]
        coefficient = cell_size / 2
        from_ = (from_[1] * cell_size - coefficient, from_[0] * cell_size - coefficient)
        to = (to[1] * cell_size - coefficient, to[0] * cell_size - coefficient)
        pygame.draw.aaline(ctx, color, from_, to)

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                sys.exit()
        pygame.display.flip()


def main():
    tests()


main()
